/* purgecss start ignore */
/* ! tailwindcss v3.2.7 | MIT License | https://tailwindcss.com */
/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/
*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: var(--color-gray-200); /* 2 */
}
::before,
::after {
  --tw-content: '';
}
/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
*/
html {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: Avenir, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
}
/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/
body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}
/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/
hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}
/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}
/*
Remove the default font size and weight for headings.
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}
/*
Reset links to optimize for opt-in styling instead of opt-out.
*/
a {
  color: inherit;
  text-decoration: inherit;
}
/*
Add the correct font weight in Edge and Safari.
*/
b,
strong {
  font-weight: bolder;
}
/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/
code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-size: 1em; /* 2 */
}
/*
Add the correct font size in all browsers.
*/
small {
  font-size: 80%;
}
/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/
table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}
/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}
/*
Remove the inheritance of text transform in Edge and Firefox.
*/
button,
select {
  text-transform: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}
/*
Use the modern Firefox focus style for all focusable elements.
*/
:-moz-focusring {
  outline: auto;
}
/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/
:-moz-ui-invalid {
  box-shadow: none;
}
/*
Add the correct vertical alignment in Chrome and Firefox.
*/
progress {
  vertical-align: baseline;
}
/*
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}
/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}
/*
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}
/*
Add the correct display in Chrome and Safari.
*/
summary {
  display: list-item;
}
/*
Removes the default spacing and border for appropriate elements.
*/
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}
fieldset {
  margin: 0;
  padding: 0;
}
legend {
  padding: 0;
}
ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}
/*
Prevent resizing textareas horizontally by default.
*/
textarea {
  resize: vertical;
}
/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/
input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
/*
Set the default cursor for buttons.
*/
button,
[role="button"] {
  cursor: pointer;
}
/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}
/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}
/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/
img,
video {
  max-width: 100%;
  height: auto;
}
/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden] {
  display: none;
}
*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}
::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}
.container {
  width: 100%;
}
@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}
@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}
@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}
.prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}
.prose :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 1.5rem;
  color: var(--body-text);
  font-weight: 500;
  font-size: 1.125rem;
  line-height: 1.625;
}
.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--accent);
  text-decoration: underline;
  font-weight: 500;
}
.prose :where(a):not(:where([class~="not-prose"] *)) > *, .prose :where(a):not(:where([class~="not-prose"] *)) p {
  color: inherit;
}
.prose :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--color-accent);
  font-weight: 500;
}
.prose :where(a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}
.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}
.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}
.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}
.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}
.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}
.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}
.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}
.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}
.prose :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}
.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}
.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}
.prose :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}
.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 200;
  font-style: oblique;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1rem;
  margin-bottom: 1.6em;
  padding-left: 1em;
  border: none;
  padding: 0;
  font-size: 1.5625rem;
  text-transform: uppercase;
}
.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}
.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}
.prose :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}
.prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}
.prose :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.875rem;
  margin-top: 2.5rem;
  margin-bottom: 1.25rem;
  line-height: 1.3333333;
  font-family: Avenir, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}
.prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}
.prose :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 500;
  font-size: 1.5625rem;
  margin-top: 2rem;
  margin-bottom: 0.5rem;
  line-height: 1.6;
  font-family: Avenir, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}
.prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.prose :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 500;
  margin-top: 2.5rem;
  margin-bottom: 0.25rem;
  line-height: 1.5;
  font-family: Avenir, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-size: 1.375rem;
}
.prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}
.prose :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.prose :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}
.prose :where(code):not(:where([class~="not-prose"] *))::before {
  content: "`";
}
.prose :where(code):not(:where([class~="not-prose"] *))::after {
  content: "`";
}
.prose :where(a code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(h1 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}
.prose :where(h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}
.prose :where(h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}
.prose :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}
.prose :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.prose :where(pre code):not(:where([class~="not-prose"] *))::before {
  content: none;
}
.prose :where(pre code):not(:where([class~="not-prose"] *))::after {
  content: none;
}
.prose :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}
.prose :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}
.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}
.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
}
.prose :where(tfoot):not(:where([class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}
.prose :where(tfoot td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
}
.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}
.prose :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.prose :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}
.prose :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}
.prose :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.prose :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.prose :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.prose :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}
.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}
.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}
.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}
.prose :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}
.prose :where(.prose > *):not(:where([class~="not-prose"] *)) {
  grid-column: 1 / -1;
}
@media (min-width: 1024px) {
  .prose :where(.prose > *):not(:where([class~="not-prose"] *)) {
    grid-column: 3 / span 8;
  }
}
.prose :where(h1,h2,h3,h4,h5,h6):not(:where([class~="not-prose"] *)) > a {
  transition: color 300ms;
  text-decoration: none;
  color: inherit;
  font-weight: inherit;
}
.prose :where(h1,h2,h3,h4,h5,h6):not(:where([class~="not-prose"] *)) > a:hover {
  text-decoration: underline;
  color: var(--accent);
}
.prose :where(h5):not(:where([class~="not-prose"] *)) {
  font-family: Avenir, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-size: 1.125rem;
  font-weight: 500;
  margin-top: 4rem;
  margin-bottom: 2.5rem;
}
.prose :where(.embed):not(:where([class~="not-prose"] *)) {
  position: relative;
  margin-right: 0 !important;
  max-width: 1278px;
  margin-left: 0;
}
@media (min-width: undefined) {
  .prose :where(.embed):not(:where([class~="not-prose"] *)) {
    margin-right: 40vw !important;
  }
}
.prose :where(.embed > div):not(:where([class~="not-prose"] *)) {
  height: 0px;
}
.prose :where(.embed > div > iframe):not(:where([class~="not-prose"] *)) {
  height: 100% !important;
  width: 100% !important;
  top: 0;
  left: 0;
  position: absolute;
  border: none;
  border-radius: 0 !important;
}
.prose-light :where(h1,h2):not(:where([class~="not-prose"] *)) {
  color: var(--color-gray-100);
}
.prose-light :where(h3,h4,h5,h6):not(:where([class~="not-prose"] *)) {
  color: var(--color-gray-300);
}
.prose-light :where(ul,ol):not(:where([class~="not-prose"] *)) {
  color: var(--color-gray-300);
}
.prose-light :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--color-body);
}
/* purgecss end ignore */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.pointer-events-none {
  pointer-events: none;
}
.visible {
  visibility: visible;
}
.invisible {
  visibility: hidden;
}
.collapse {
  visibility: collapse;
}
.static {
  position: static;
}
.fixed {
  position: fixed;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.inset-0 {
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}
.bottom-32 {
  bottom: 8rem;
}
.bottom-4 {
  bottom: 1rem;
}
.left-0 {
  left: 0px;
}
.left-4 {
  left: 1rem;
}
.left-\[-150px\] {
  left: -150px;
}
.left-\[-69px\] {
  left: -69px;
}
.left-\[3px\] {
  left: 3px;
}
.left-\[50\%\] {
  left: 50%;
}
.right-0 {
  right: 0px;
}
.right-4 {
  right: 1rem;
}
.right-\[5vw\] {
  right: 5vw;
}
.top-0 {
  top: 0px;
}
.top-2 {
  top: 0.5rem;
}
.top-2\.5 {
  top: 0.625rem;
}
.top-5 {
  top: 1.25rem;
}
.top-\[10px\] {
  top: 10px;
}
.top-\[30px\] {
  top: 30px;
}
.top-\[40px\] {
  top: 40px;
}
.top-\[50\%\] {
  top: 50%;
}
.top-\[63px\] {
  top: 63px;
}
.z-10 {
  z-index: 10;
}
.z-20 {
  z-index: 20;
}
.z-30 {
  z-index: 30;
}
.z-\[2\] {
  z-index: 2;
}
.col-span-full {
  grid-column: 1 / -1;
}
.mx-\[10vw\] {
  margin-left: 10vw;
  margin-right: 10vw;
}
.mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.my-0 {
  margin-top: 0px;
  margin-bottom: 0px;
}
.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}
.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}
.my-8 {
  margin-top: 2rem;
  margin-bottom: 2rem;
}
.mb-1 {
  margin-bottom: 0.25rem;
}
.mb-10 {
  margin-bottom: 2.5rem;
}
.mb-12 {
  margin-bottom: 3rem;
}
.mb-20 {
  margin-bottom: 5rem;
}
.mb-24 {
  margin-bottom: 6rem;
}
.mb-4 {
  margin-bottom: 1rem;
}
.mb-8 {
  margin-bottom: 2rem;
}
.ml-0 {
  margin-left: 0px;
}
.ml-2 {
  margin-left: 0.5rem;
}
.ml-4 {
  margin-left: 1rem;
}
.ml-\[10vw\] {
  margin-left: 10vw;
}
.mr-16 {
  margin-right: 4rem;
}
.mr-2 {
  margin-right: 0.5rem;
}
.mr-6 {
  margin-right: 1.5rem;
}
.mr-8 {
  margin-right: 2rem;
}
.mr-\[10vw\] {
  margin-right: 10vw;
}
.mr-\[15px\] {
  margin-right: 15px;
}
.mt-12 {
  margin-top: 3rem;
}
.mt-16 {
  margin-top: 4rem;
}
.mt-2 {
  margin-top: 0.5rem;
}
.mt-6 {
  margin-top: 1.5rem;
}
.mt-8 {
  margin-top: 2rem;
}
.block {
  display: block;
}
.inline {
  display: inline;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.contents {
  display: contents;
}
.hidden {
  display: none;
}
.h-10 {
  height: 2.5rem;
}
.h-16 {
  height: 4rem;
}
.h-5 {
  height: 1.25rem;
}
.h-6 {
  height: 1.5rem;
}
.h-7 {
  height: 1.75rem;
}
.h-8 {
  height: 2rem;
}
.h-\[100px\] {
  height: 100px;
}
.h-\[2px\] {
  height: 2px;
}
.h-\[56px\] {
  height: 56px;
}
.h-auto {
  height: auto;
}
.h-full {
  height: 100%;
}
.h-screen {
  height: 100vh;
}
.w-16 {
  width: 4rem;
}
.w-5 {
  width: 1.25rem;
}
.w-6 {
  width: 1.5rem;
}
.w-7 {
  width: 1.75rem;
}
.w-\[100px\] {
  width: 100px;
}
.w-\[100vw\] {
  width: 100vw;
}
.w-\[120px\] {
  width: 120px;
}
.w-\[200px\] {
  width: 200px;
}
.w-\[24px\] {
  width: 24px;
}
.w-\[2px\] {
  width: 2px;
}
.w-\[5\.5rem\] {
  width: 5.5rem;
}
.w-\[80px\] {
  width: 80px;
}
.w-full {
  width: 100%;
}
.min-w-\[150px\] {
  min-width: 150px;
}
.max-w-4xl {
  max-width: 56rem;
}
.max-w-5xl {
  max-width: 64rem;
}
.max-w-7xl {
  max-width: 80rem;
}
.max-w-\[40px\] {
  max-width: 40px;
}
.max-w-full {
  max-width: 100%;
}
.max-w-md {
  max-width: 28rem;
}
.max-w-screen-lg {
  max-width: 1024px;
}
.flex-1 {
  flex: 1 1 0%;
}
.flex-none {
  flex: none;
}
.flex-grow {
  flex-grow: 1;
}
.grow {
  flex-grow: 1;
}
.origin-top-right {
  transform-origin: top right;
}
.translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-x-\[-50\%\] {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-x-\[160\%\] {
  --tw-translate-x: 160%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-\[-50\%\] {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-\[-55\%\] {
  --tw-translate-y: -55%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.scale-0 {
  --tw-scale-x: 0;
  --tw-scale-y: 0;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.scale-100 {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
.animate-spin {
  animation: spin 1s linear infinite;
}
.cursor-default {
  cursor: default;
}
.cursor-pointer {
  cursor: pointer;
}
.select-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.resize {
  resize: both;
}
.appearance-none {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.flex-nowrap {
  flex-wrap: nowrap;
}
.items-start {
  align-items: flex-start;
}
.items-end {
  align-items: flex-end;
}
.items-center {
  align-items: center;
}
.justify-end {
  justify-content: flex-end;
}
.justify-center {
  justify-content: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-evenly {
  justify-content: space-evenly;
}
.gap-x-16 {
  -moz-column-gap: 4rem;
       column-gap: 4rem;
}
.gap-x-4 {
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}
.gap-y-12 {
  row-gap: 3rem;
}
.space-x-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}
.divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}
.divide-y-\[0\.5px\] > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(0.5px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(0.5px * var(--tw-divide-y-reverse));
}
.divide-white > :not([hidden]) ~ :not([hidden]) {
  border-color: var(--color-white);
}
.divide-opacity-20 > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-opacity: 0.2;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-y-auto {
  overflow-y: auto;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.break-words {
  overflow-wrap: break-word;
}
.rounded-full {
  border-radius: 9999px;
}
.rounded-md {
  border-radius: 0.375rem;
}
.rounded-sm {
  border-radius: 0.125rem;
}
.border {
  border-width: 1px;
}
.border-0 {
  border-width: 0px;
}
.border-b-2 {
  border-bottom-width: 2px;
}
.border-t-\[1px\] {
  border-top-width: 1px;
}
.border-solid {
  border-style: solid;
}
.border-none {
  border-style: none;
}
.border-accent {
  border-color: var(--accent);
}
.border-gray-300 {
  border-color: var(--color-gray-300);
}
.border-white {
  border-color: var(--color-white);
}
.bg-\[\#00000020\] {
  background-color: #00000020;
}
.bg-black {
  background-color: var(--color-black);
}
.bg-gray-100 {
  background-color: var(--color-gray-100);
}
.bg-pink {
  background-color: var(--color-pink);
}
.bg-transparent {
  background-color: transparent;
}
.bg-white {
  background-color: var(--color-white);
}
.bg-contain {
  background-size: contain;
}
.bg-fixed {
  background-attachment: fixed;
}
.bg-no-repeat {
  background-repeat: no-repeat;
}
.fill-accent {
  fill: var(--accent);
}
.fill-gray-300 {
  fill: var(--color-gray-300);
}
.fill-white {
  fill: var(--color-white);
}
.stroke-accent {
  stroke: var(--accent);
}
.stroke-gray-300 {
  stroke: var(--color-gray-300);
}
.p-1 {
  padding: 0.25rem;
}
.p-16 {
  padding: 4rem;
}
.p-2 {
  padding: 0.5rem;
}
.p-3 {
  padding: 0.75rem;
}
.p-4 {
  padding: 1rem;
}
.p-6 {
  padding: 1.5rem;
}
.p-8 {
  padding: 2rem;
}
.px-10 {
  padding-left: 2.5rem;
  padding-right: 2.5rem;
}
.px-14 {
  padding-left: 3.5rem;
  padding-right: 3.5rem;
}
.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}
.px-9 {
  padding-left: 2.25rem;
  padding-right: 2.25rem;
}
.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}
.pb-8 {
  padding-bottom: 2rem;
}
.pl-8 {
  padding-left: 2rem;
}
.pr-4 {
  padding-right: 1rem;
}
.pt-0 {
  padding-top: 0px;
}
.pt-2 {
  padding-top: 0.5rem;
}
.pt-6 {
  padding-top: 1.5rem;
}
.pt-\[5px\] {
  padding-top: 5px;
}
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.font-body {
  font-family: Avenir, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}
.font-display {
  font-family: Lemon, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}
.text-2xl {
  font-size: 1.5625rem;
}
.text-3xl {
  font-size: 1.875rem;
}
.text-5xl {
  font-size: 3.125rem;
}
.text-\[1\.25rem\] {
  font-size: 1.25rem;
}
.text-\[1\.5rem\] {
  font-size: 1.5rem;
}
.text-\[2\.6rem\] {
  font-size: 2.6rem;
}
.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.text-xl {
  font-size: 1.375rem;
}
.font-bold {
  font-weight: 700;
}
.font-light {
  font-weight: 300;
}
.font-medium {
  font-weight: 500;
}
.uppercase {
  text-transform: uppercase;
}
.capitalize {
  text-transform: capitalize;
}
.italic {
  font-style: italic;
}
.not-italic {
  font-style: normal;
}
.leading-\[1\.1\] {
  line-height: 1.1;
}
.leading-\[1\.5\] {
  line-height: 1.5;
}
.leading-\[1em\] {
  line-height: 1em;
}
.leading-tight {
  line-height: 1.25;
}
.\!text-pink {
  color: var(--color-pink) !important;
}
.text-accent {
  color: var(--accent);
}
.text-gray-100 {
  color: var(--color-gray-100);
}
.text-gray-300 {
  color: var(--color-gray-300);
}
.text-pink {
  color: var(--color-pink);
}
.text-white {
  color: var(--color-white);
}
.underline {
  text-decoration-line: underline;
}
.no-underline {
  text-decoration-line: none;
}
.placeholder-white::-moz-placeholder {
  color: var(--color-white);
}
.placeholder-white::placeholder {
  color: var(--color-white);
}
.opacity-0 {
  opacity: 0;
}
.opacity-100 {
  opacity: 1;
}
.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-2xl {
  --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.drop-shadow-toggle {
  --tw-drop-shadow: drop-shadow(6px 4px 8px var(--color-gray-300));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.transition-\[color\] {
  transition-property: color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-\[fill\] {
  transition-property: fill;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.duration-300 {
  transition-duration: 300ms;
}
.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.dark .dark\:prose-dark :where(h1,h2,h3,h4,h5,h6):not(:where([class~="not-prose"] *)) {
  color: var(--color-white);
}
.dark .dark\:prose-dark :where(ol, ul):not(:where([class~="not-prose"] *)) {
  color: var(--color-white);
}
.dark .dark\:prose-dark :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--color-accent);
}
.before\:fixed::before {
  content: var(--tw-content);
  position: fixed;
}
.before\:absolute::before {
  content: var(--tw-content);
  position: absolute;
}
.before\:left-0::before {
  content: var(--tw-content);
  left: 0px;
}
.before\:left-\[-2vw\]::before {
  content: var(--tw-content);
  left: -2vw;
}
.before\:left-\[50\%\]::before {
  content: var(--tw-content);
  left: 50%;
}
.before\:top-0::before {
  content: var(--tw-content);
  top: 0px;
}
.before\:top-\[-5vh\]::before {
  content: var(--tw-content);
  top: -5vh;
}
.before\:top-\[12px\]::before {
  content: var(--tw-content);
  top: 12px;
}
.before\:top-\[8px\]::before {
  content: var(--tw-content);
  top: 8px;
}
.before\:z-10::before {
  content: var(--tw-content);
  z-index: 10;
}
.before\:hidden::before {
  content: var(--tw-content);
  display: none;
}
.before\:h-\[105vh\]::before {
  content: var(--tw-content);
  height: 105vh;
}
.before\:h-\[18px\]::before {
  content: var(--tw-content);
  height: 18px;
}
.before\:h-\[1px\]::before {
  content: var(--tw-content);
  height: 1px;
}
.before\:h-\[2px\]::before {
  content: var(--tw-content);
  height: 2px;
}
.before\:w-\[105vw\]::before {
  content: var(--tw-content);
  width: 105vw;
}
.before\:w-\[18px\]::before {
  content: var(--tw-content);
  width: 18px;
}
.before\:w-\[200px\]::before {
  content: var(--tw-content);
  width: 200px;
}
.before\:w-\[24px\]::before {
  content: var(--tw-content);
  width: 24px;
}
.before\:origin-top-right::before {
  content: var(--tw-content);
  transform-origin: top right;
}
.before\:-translate-x-1\/2::before {
  content: var(--tw-content);
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.before\:translate-x-\[-50\%\]::before {
  content: var(--tw-content);
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.before\:translate-y-\[-50\%\]::before {
  content: var(--tw-content);
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.before\:rotate-0::before {
  content: var(--tw-content);
  --tw-rotate: 0deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.before\:rotate-\[-45deg\]::before {
  content: var(--tw-content);
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.before\:scale-0::before {
  content: var(--tw-content);
  --tw-scale-x: 0;
  --tw-scale-y: 0;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.before\:scale-100::before {
  content: var(--tw-content);
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.before\:rounded-full::before {
  content: var(--tw-content);
  border-radius: 9999px;
}
.before\:rounded-sm::before {
  content: var(--tw-content);
  border-radius: 0.125rem;
}
.before\:bg-accent::before {
  content: var(--tw-content);
  background-color: var(--accent);
}
.before\:bg-gray-100::before {
  content: var(--tw-content);
  background-color: var(--color-gray-100);
}
.before\:bg-white::before {
  content: var(--tw-content);
  background-color: var(--color-white);
}
.before\:opacity-0::before {
  content: var(--tw-content);
  opacity: 0;
}
.before\:opacity-100::before {
  content: var(--tw-content);
  opacity: 1;
}
.before\:transition-all::before {
  content: var(--tw-content);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.before\:duration-300::before {
  content: var(--tw-content);
  transition-duration: 300ms;
}
.before\:ease-in-out::before {
  content: var(--tw-content);
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.before\:content-\[\"\"\]::before {
  --tw-content: "";
  content: var(--tw-content);
}
.before\:content-\[\'\'\]::before {
  --tw-content: '';
  content: var(--tw-content);
}
.after\:absolute::after {
  content: var(--tw-content);
  position: absolute;
}
.after\:bottom-\[-10px\]::after {
  content: var(--tw-content);
  bottom: -10px;
}
.after\:left-0::after {
  content: var(--tw-content);
  left: 0px;
}
.after\:left-\[-13vw\]::after {
  content: var(--tw-content);
  left: -13vw;
}
.after\:left-\[50\%\]::after {
  content: var(--tw-content);
  left: 50%;
}
.after\:right-0::after {
  content: var(--tw-content);
  right: 0px;
}
.after\:top-\[10px\]::after {
  content: var(--tw-content);
  top: 10px;
}
.after\:top-\[16px\]::after {
  content: var(--tw-content);
  top: 16px;
}
.after\:top-\[2rem\]::after {
  content: var(--tw-content);
  top: 2rem;
}
.after\:top-\[8px\]::after {
  content: var(--tw-content);
  top: 8px;
}
.after\:hidden::after {
  content: var(--tw-content);
  display: none;
}
.after\:h-\[2px\]::after {
  content: var(--tw-content);
  height: 2px;
}
.after\:h-full::after {
  content: var(--tw-content);
  height: 100%;
}
.after\:w-10::after {
  content: var(--tw-content);
  width: 2.5rem;
}
.after\:w-5::after {
  content: var(--tw-content);
  width: 1.25rem;
}
.after\:w-7::after {
  content: var(--tw-content);
  width: 1.75rem;
}
.after\:w-9::after {
  content: var(--tw-content);
  width: 2.25rem;
}
.after\:w-\[1\.5rem\]::after {
  content: var(--tw-content);
  width: 1.5rem;
}
.after\:w-\[11vw\]::after {
  content: var(--tw-content);
  width: 11vw;
}
.after\:w-\[150px\]::after {
  content: var(--tw-content);
  width: 150px;
}
.after\:w-\[24px\]::after {
  content: var(--tw-content);
  width: 24px;
}
.after\:w-\[2px\]::after {
  content: var(--tw-content);
  width: 2px;
}
.after\:translate-x-\[-50\%\]::after {
  content: var(--tw-content);
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.after\:rotate-\[0deg\]::after {
  content: var(--tw-content);
  --tw-rotate: 0deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.after\:rotate-\[45deg\]::after {
  content: var(--tw-content);
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.after\:border-b-\[1px\]::after {
  content: var(--tw-content);
  border-bottom-width: 1px;
}
.after\:border-gray-300::after {
  content: var(--tw-content);
  border-color: var(--color-gray-300);
}
.after\:bg-accent::after {
  content: var(--tw-content);
  background-color: var(--accent);
}
.after\:bg-black::after {
  content: var(--tw-content);
  background-color: var(--color-black);
}
.after\:bg-gray-100::after {
  content: var(--tw-content);
  background-color: var(--color-gray-100);
}
.after\:bg-white::after {
  content: var(--tw-content);
  background-color: var(--color-white);
}
.after\:transition-all::after {
  content: var(--tw-content);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.after\:duration-300::after {
  content: var(--tw-content);
  transition-duration: 300ms;
}
.after\:ease-in-out::after {
  content: var(--tw-content);
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.after\:content-\[\"\"\]::after {
  --tw-content: "";
  content: var(--tw-content);
}
.first\:fill-gray-300:first-child {
  fill: var(--color-gray-300);
}
.first-of-type\:ml-0:first-of-type {
  margin-left: 0px;
}
.first-of-type\:mt-12:first-of-type {
  margin-top: 3rem;
}
.first-of-type\:mt-16:first-of-type {
  margin-top: 4rem;
}
.last-of-type\:mb-0:last-of-type {
  margin-bottom: 0px;
}
.last-of-type\:mr-0:last-of-type {
  margin-right: 0px;
}
.hover\:\!text-pink:hover {
  color: var(--color-pink) !important;
}
.hover\:text-pink:hover {
  color: var(--color-pink);
}
.hover\:text-white:hover {
  color: var(--color-white);
}
.focus\:\!text-pink:focus {
  color: var(--color-pink) !important;
}
.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}
.focus\:ring-white:focus {
  --tw-ring-color: var(--color-white);
}
.focus\:ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}
.group:hover .group-hover\:text-accent {
  color: var(--accent);
}
.group:hover .group-hover\:text-pink {
  color: var(--color-pink);
}
.group:hover .group-hover\:underline {
  text-decoration-line: underline;
}
.aria-selected\:bg-gray-300[aria-selected="true"] {
  background-color: var(--color-gray-300);
}
.aria-selected\:text-white[aria-selected="true"] {
  color: var(--color-white);
}
.dark .dark\:translate-x-\[100\%\] {
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.dark .dark\:divide-gray-300 > :not([hidden]) ~ :not([hidden]) {
  border-color: var(--color-gray-300);
}
.dark .dark\:border-accent {
  border-color: var(--accent);
}
.dark .dark\:border-gray-300 {
  border-color: var(--color-gray-300);
}
.dark .dark\:border-white {
  border-color: var(--color-white);
}
.dark .dark\:border-b-white {
  border-bottom-color: var(--color-white);
}
.dark .dark\:bg-\[\#ffffff20\] {
  background-color: #ffffff20;
}
.dark .dark\:bg-accent {
  background-color: var(--accent);
}
.dark .dark\:bg-gray-100 {
  background-color: var(--color-gray-100);
}
.dark .dark\:bg-gray-300 {
  background-color: var(--color-gray-300);
}
.dark .dark\:bg-white {
  background-color: var(--color-white);
}
.dark .dark\:fill-black {
  fill: var(--color-black);
}
.dark .dark\:fill-white {
  fill: var(--color-white);
}
.dark .dark\:stroke-white {
  stroke: var(--color-white);
}
.dark .dark\:text-accent {
  color: var(--accent);
}
.dark .dark\:text-gray-100 {
  color: var(--color-gray-100);
}
.dark .dark\:text-gray-300 {
  color: var(--color-gray-300);
}
.dark .dark\:text-white {
  color: var(--color-white);
}
.dark .dark\:opacity-80 {
  opacity: 0.8;
}
.dark .before\:dark\:bg-gray-100::before {
  content: var(--tw-content);
  background-color: var(--color-gray-100);
}
.dark .before\:dark\:bg-gray-300::before {
  content: var(--tw-content);
  background-color: var(--color-gray-300);
}
.dark .before\:dark\:bg-white::before {
  content: var(--tw-content);
  background-color: var(--color-white);
}
.dark .dark\:after\:border-white::after {
  content: var(--tw-content);
  border-color: var(--color-white);
}
.dark .after\:dark\:bg-gray-300::after {
  content: var(--tw-content);
  background-color: var(--color-gray-300);
}
.dark .after\:dark\:bg-white::after {
  content: var(--tw-content);
  background-color: var(--color-white);
}
.dark .first\:dark\:fill-white:first-child {
  fill: var(--color-white);
}
@media (min-width: 640px) {
  .md\:col-span-2 {
    grid-column: span 2 / span 2;
  }
  .md\:col-start-2 {
    grid-column-start: 2;
  }
  .md\:mx-auto {
    margin-left: auto;
    margin-right: auto;
  }
  .md\:my-0 {
    margin-top: 0px;
    margin-bottom: 0px;
  }
  .md\:mb-0 {
    margin-bottom: 0px;
  }
  .md\:ml-0 {
    margin-left: 0px;
  }
  .md\:ml-6 {
    margin-left: 1.5rem;
  }
  .md\:ml-\[18vw\] {
    margin-left: 18vw;
  }
  .md\:block {
    display: block;
  }
  .md\:flex {
    display: flex;
  }
  .md\:hidden {
    display: none;
  }
  .md\:h-10 {
    height: 2.5rem;
  }
  .md\:h-7 {
    height: 1.75rem;
  }
  .md\:h-auto {
    height: auto;
  }
  .md\:w-7 {
    width: 1.75rem;
  }
  .md\:w-\[5\.5rem\] {
    width: 5.5rem;
  }
  .md\:max-w-6xl {
    max-width: 72rem;
  }
  .md\:max-w-\[50\%\] {
    max-width: 50%;
  }
  .md\:grid-cols-8 {
    grid-template-columns: repeat(8, minmax(0, 1fr));
  }
  .md\:flex-wrap {
    flex-wrap: wrap;
  }
  .md\:rounded-xl {
    border-radius: 0.75rem;
  }
  .md\:p-6 {
    padding: 1.5rem;
  }
  .md\:pl-10 {
    padding-left: 2.5rem;
  }
  .md\:pl-12 {
    padding-left: 3rem;
  }
  .md\:pl-6 {
    padding-left: 1.5rem;
  }
  .md\:pl-8 {
    padding-left: 2rem;
  }
  .md\:pr-0 {
    padding-right: 0px;
  }
  .md\:pr-10 {
    padding-right: 2.5rem;
  }
  .md\:pr-12 {
    padding-right: 3rem;
  }
  .md\:pr-6 {
    padding-right: 1.5rem;
  }
  .md\:pr-8 {
    padding-right: 2rem;
  }
  .md\:pt-4 {
    padding-top: 1rem;
  }
  .md\:pt-6 {
    padding-top: 1.5rem;
  }
  .md\:text-left {
    text-align: left;
  }
  .md\:text-right {
    text-align: right;
  }
  .md\:text-2xl {
    font-size: 1.5625rem;
  }
  .md\:text-3xl {
    font-size: 1.875rem;
  }
  .md\:text-5xl {
    font-size: 3.125rem;
  }
  .md\:text-7xl {
    font-size: 4.375rem;
  }
  .md\:text-\[2\.5rem\] {
    font-size: 2.5rem;
  }
  .md\:text-\[3\.5rem\] {
    font-size: 3.5rem;
  }
  .md\:text-\[5\.2rem\] {
    font-size: 5.2rem;
  }
  .md\:text-xl {
    font-size: 1.375rem;
  }
  .before\:md\:block::before {
    content: var(--tw-content);
    display: block;
  }
  .after\:md\:block::after {
    content: var(--tw-content);
    display: block;
  }
  .md\:after\:block::after {
    content: var(--tw-content);
    display: block;
  }
  .md\:first-of-type\:ml-6:first-of-type {
    margin-left: 1.5rem;
  }
  .dark .md\:dark\:translate-x-\[160\%\] {
    --tw-translate-x: 160%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}
@media (min-width: 1024px) {
  .lg\:visible {
    visibility: visible;
  }
  .lg\:relative {
    position: relative;
  }
  .lg\:bottom-24 {
    bottom: 6rem;
  }
  .lg\:top-\[inherit\] {
    top: inherit;
  }
  .lg\:col-span-8 {
    grid-column: span 8 / span 8;
  }
  .lg\:col-start-3 {
    grid-column-start: 3;
  }
  .lg\:mb-0 {
    margin-bottom: 0px;
  }
  .lg\:ml-6 {
    margin-left: 1.5rem;
  }
  .lg\:mr-0 {
    margin-right: 0px;
  }
  .lg\:mt-0 {
    margin-top: 0px;
  }
  .lg\:block {
    display: block;
  }
  .lg\:flex {
    display: flex;
  }
  .lg\:grid {
    display: grid;
  }
  .lg\:hidden {
    display: none;
  }
  .lg\:w-\[46\%\] {
    width: 46%;
  }
  .lg\:w-auto {
    width: auto;
  }
  .lg\:max-w-\[400px\] {
    max-width: 400px;
  }
  .lg\:flex-grow-0 {
    flex-grow: 0;
  }
  .lg\:scale-100 {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  .lg\:grid-cols-12 {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }
  .lg\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .lg\:grid-rows-2 {
    grid-template-rows: repeat(2, minmax(0, 1fr));
  }
  .lg\:flex-nowrap {
    flex-wrap: nowrap;
  }
  .lg\:justify-start {
    justify-content: flex-start;
  }
  .lg\:justify-between {
    justify-content: space-between;
  }
  .lg\:gap-x-6 {
    -moz-column-gap: 1.5rem;
         column-gap: 1.5rem;
  }
  .lg\:overflow-auto {
    overflow: auto;
  }
  .lg\:bg-transparent {
    background-color: transparent;
  }
  .lg\:bg-white {
    background-color: var(--color-white);
  }
  .lg\:p-10 {
    padding: 2.5rem;
  }
  .lg\:p-16 {
    padding: 4rem;
  }
  .lg\:px-28 {
    padding-left: 7rem;
    padding-right: 7rem;
  }
  .lg\:text-left {
    text-align: left;
  }
  .lg\:text-white {
    color: var(--color-white);
  }
  .lg\:opacity-100 {
    opacity: 1;
  }
  .dark .dark\:lg\:bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .dark .lg\:dark\:bg-white {
    background-color: var(--color-white);
  }
  .dark .lg\:dark\:text-gray-300 {
    color: var(--color-gray-300);
  }
}
@media (min-width: 1536px) {
  .xl\:mx-auto {
    margin-left: auto;
    margin-right: auto;
  }
}
@font-face {
  font-family: 'Avenir';
  src: url('/fonts/Avenir-Black.woff2') format('woff2'),
    url('/fonts/Avenir-Black.woff') format('woff');
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: 'Avenir';
  src: url('/fonts/Avenir-Medium.woff2') format('woff2'),
    url('/fonts/Avenir-Medium.woff') format('woff');
  font-weight: 500;
  font-style: normal;
}
@font-face {
  font-family: 'Avenir';
  src: url('/fonts/Avenir-MediumOblique.woff2') format('woff2'),
    url('/fonts/Avenir-MediumOblique.woff') format('woff');
  font-weight: 500;
  font-style: oblique;
}
@font-face {
  font-family: 'Avenir';
  src: url('/fonts/Avenir-Book.woff2') format('woff2'),
    url('/fonts/Avenir-Book.woff') format('woff');
  font-weight: 200;
  font-style: normal;
}
@font-face {
  font-family: 'Avenir';
  src: url('/fonts/Avenir-BookOblique.woff2') format('woff2'),
    url('/fonts/Avenir-BookOblique.woff') format('woff');
  font-weight: 200;
  font-style: oblique;
}
@font-face {
  font-family: 'Lemon';
  src: url('/fonts/LemonMilkbold.woff2') format('woff2'),
    url('/fonts/LemonMilkbold.woff') format('woff');
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: 'Lemon';
  src: url('/fonts/LemonMilk.woff2') format('woff2'),
    url('/fonts/LemonMilk.woff') format('woff');
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: 'Lemon';
  src: url('/fonts/LemonMilklightitalic.woff2') format('woff2'),
    url('/fonts/LemonMilklightitalic.woff') format('woff');
  font-weight: 100;
  font-style: italic;
}
