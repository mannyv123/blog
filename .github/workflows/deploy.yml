name: 🚀 Deploy
on:
  push:
    branches:
      - main
  pull_request: {}
  workflow_dispatch:
    inputs:
      force_fresh:
        description: 'Force refresh redis cache for the blog list and others'
        required: true
        type: choice
        options:
          - true
jobs:
  changes:
    name: 🔎 Determine deployable changes
    runs-on: ubuntu-latest
    outputs:
      DEPLOYABLE: ${{steps.changes.outputs.DEPLOYABLE}}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: '50'

      - name: ⎔ Setup node
        uses: actions/setup-node@v3

      - name: 🔎 Determine deployable changes
        id: changes
        if: inputs.force_fresh != 'true'
        run: >-
          echo "DEPLOYABLE=$(node ./other/is-deployable.js)" >> $GITHUB_OUTPUT
      - name: ❓ Deployable
        run: >-
          echo "DEPLOYABLE: ${{steps.changes.outputs.DEPLOYABLE}}"
  lint:
    name: ⬣ ESLint
    needs: [changes]
    if: needs.changes.outputs.DEPLOYABLE == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🔬 Lint
        run: npm run lint

  typecheck:
    name: ʦ :TypeScript
    needs: [changes]
    if: needs.changes.outputs.DEPLOYABLE == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🔎 Type check
        run: npm run typecheck
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [changes, lint, typecheck]
    # only build/deploy main branch on pushes
    if:
      ${{ (needs.changes.outputs.DEPLOYABLE == 'true') && (github.ref ==
      'refs/heads/main') && github.event_name == 'push' }}

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: '50'

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.0.0
        id: app_name
        with:
          file: 'fly.toml'
          field: 'app'

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: superfly/flyctl-actions@1.3
        with:
          version: 0.0.540
          args: 'deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }}'
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🥬 Refresh Content
        run: node ./other/refresh-content.js
        env:
          REFRESH_CACHE_SECRET: ${{ secrets.REFRESH_CACHE_SECRET }}
          FORCE_FRESH: ${{ inputs.force_fresh }}
          NODE_ENV: production

      - name: Cloudflare Purge Cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          # Zone is required by both authentication methods
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}

          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}

  refresh:
    name: 🥬 Refresh Content
    if:
      needs.changes.outputs.DEPLOYABLE != 'true' ||  inputs.force_fresh ==
      'true'
    needs: [changes]
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: '50'

      - name: ⎔ Setup node
        uses: actions/setup-node@v3

      - name: 🥬 Refresh Content
        run: node ./other/refresh-content.js
        env:
          REFRESH_CACHE_SECRET: ${{ secrets.REFRESH_CACHE_SECRET }}
          FORCE_FRESH: ${{ inputs.force_fresh }}
          NODE_ENV: production

  purge:
    name: 💨 Purge Cache
    if:
      needs.changes.outputs.DEPLOYABLE != 'true' || inputs.force_fresh == 'true'
    runs-on: ubuntu-latest
    needs: [changes, refresh]
    steps:
      - name: Cloudflare Purge Cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          # Zone is required by both authentication methods
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}

          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
